<!DOCTYPE HTML PUBLIC "-//SoftQuad//DTD HTML 3.2 + extensions for HoTMetaL PRO 3.0(U) 19961211//EN" "hmpro3.dtd"><HTML>    <HEAD>    <TITLE>Big C++ Lab - Chapter 4 Basic Control Flow</TITLE>  </HEAD>    <BODY>    <p align="center"><font size="6">BIG C++<br>  </font><font size="4">Cay Horstmann     &amp; Timothy Budd</font> </p>  <p align="center"><font size="4"><strong>Laboratory Notebook<br>  Chapter 4 - Basic Control Flow </strong></font></p><hr align="center"><FORM ACTION="CCC_CH4_LAB.HTML" METHOD="POST">    <TABLE BORDER="0">      <TR>        <TD>Your name: </TD>        <TD><INPUT TYPE="text" SIZE="20" NAME="username"></TD>      </TR>      <TR>        <TD>Your email address: </TD>        <TD><INPUT TYPE="text" SIZE="20" NAME="recipientaddr"></TD>      </TR>      <TR>        <TD>Your student ID number: </TD>        <TD><INPUT TYPE="text" SIZE="20" NAME="ID"></TD>      </TR>    </TABLE><INPUT TYPE="HIDDEN" NAME="useraddr"     VALUE="instructor@institution.edu"><INPUT TYPE="HIDDEN"     NAME="recipientname"     VALUE="yourself since this form has not been customized for your institution">    <INPUT TYPE="HIDDEN" NAME="subject" VALUE="CCC Lab4">        <P><A NAME="#submit"></A>Once this form has been customized for your      institution, you can use this button <INPUT TYPE="submit" VALUE="Send lab">      to send your lab work. Be sure to read the <A HREF="instructions.html">instructions</A>      before starting your work.</P>    <HR>        <H4>Lab Objectives</H4>        <P>To gain experience in </P>    <UL>      <LI>implementing simple decisions</LI>      <LI>writing expressions with relational operators</LI>      <LI>input validation</LI>      <LI>simple loops</LI>      <LI>using Boolean variables</LI>    </UL>        &nbsp;        <H3>R1. The <B><TT>if</TT></B> statement </H3>        <P>In C++, decisions to execute or not execute a statement or group of    statements can be made by using the      statement <TT>if (<i>condition</i>)</TT>. The <TT><I>condition</I></TT> must be an expression that can be evaluated as either      <TT>true</TT> or <TT>false</TT>. If it evaluates to <TT>true</TT>, a      succeeding statement or group of statements enclosed in <TT>{ . . . }</TT>,      called a <I>block statement</I> will be executed.</P>        <P>How m<TT>uch money will be added to your account when the initial    starting amount is $100</TT>? <INPUT NAME="CCC_CH4_R1a" ALIGN="MIDDLE" WIDTH="200">    </P>    <PRE>How much money will be added to your account when the initial starting amount is $85? <INPUT NAME="CCC_CH4_R1a1" ALIGN="MIDDLE" WIDTH="200" size="20">#include &lt;iostream&gt;int main(){ </PRE>        <PRE>  double initial_value, final_value;</PRE>        <PRE>  cout &lt;&lt;&quot;Please enter the initial balance: &quot;;</PRE>        <PRE>  cin &gt;&gt; initial_value;</PRE>        <PRE>    if (inital_value &gt; 90 )    {  </PRE>        <PRE>      final_value = final_value + 10;</PRE>        <PRE>    }    final_value = final_value + 5;    cout &lt;&lt;&quot;Final Value&quot; &lt;&lt;final_value;    return 0;}</PRE>        <HR>        <H3>R2. Relations and Relational Operators</H3>        <P>The relational operators in C++ are <TT> == != &lt; &gt; &lt;= and &gt;=</TT></P>    <UL>      <LI>Formulate the following conditions in C++: </LI>    </UL>    <TABLE>      <TR>        <TD>x is positive</TD>        <TD><INPUT NAME="CCC_CH4_R2a" ALIGN="MIDDLE" WIDTH="30"></TD>      </TR>      <TR>        <TD>x is zero or negative</TD>        <TD><INPUT NAME="CCC_CH4_R2b" ALIGN="MIDDLE" WIDTH="30"></TD>      </TR>      <TR>        <TD>x is at least 8</TD>        <TD><INPUT NAME="CCC_CH4_R2c" ALIGN="MIDDLE" WIDTH="30"></TD>      </TR>      <TR>        <TD>x is less than 8</TD>        <TD><INPUT NAME="CCC_CH4_R2d" ALIGN="MIDDLE" WIDTH="30"></TD>      </TR>      <TR>        <TD>x and y are both zero</TD>        <TD><INPUT NAME="CCC_CH4_R2e" ALIGN="MIDDLE" WIDTH="30"></TD>      </TR>    </TABLE>    <UL>      <LI>Formulate the following conditions for the employee object <TT>e</TT>.</LI>    </UL>    <TABLE>      <TR>        <TD>The last name of <TT>e</TT> starts with the letter H</TD>        <TD><INPUT NAME="CCC_CH4_R2f" ALIGN="MIDDLE" WIDTH="30"></TD>      </TR>      <TR>        <TD>The salary of <TT>e</TT> is at least $75,000</TD>        <TD><INPUT NAME="CCC_CH4_R2g" ALIGN="MIDDLE" WIDTH="30"></TD>      </TR>    </TABLE>    <UL>      <LI>Formulate the following conditions on the variable <TT>harrys_birthday</TT>        of type <TT>Time</TT>.</LI>    </UL>    <TABLE>      <TR>        <TD>Harry is at least 21 years old.</TD>        <TD><INPUT NAME="CCC_CH4_R2h" ALIGN="MIDDLE" WIDTH="30"></TD>      </TR>      <TR>        <TD>Harry was born in August.</TD>        <TD><INPUT NAME="CCC_CH4_R2i" ALIGN="MIDDLE" WIDTH="30"></TD>      </TR>      <TR>        <TD>Harry was born in a leap year (assume his birthday was between 1901        and 2099).</TD>        <TD><INPUT NAME="CCC_CH4_R2j" ALIGN="MIDDLE" WIDTH="30"></TD>      </TR>    </TABLE>    <HR>        <H3>P1. Input validation</H3>        <UL>      <LI>Build and run the following program. Describe what happens when the        two points have the same x coordinate?</LI>    </UL>        <P><TEXTAREA NAME="CCC_CH4_P1a" COLS="80" ROWS="3"></TEXTAREA></P><PRE>#include &lt;iostream&gt;using namespace std;#include &quot;ccc_shap.cpp&quot;main(){  double slope;   double xcoord, ycoord;   Point p1, p2;    cout &lt;&lt; &quot;Input x coordinate of the first point&quot; &lt;&lt; &quot;\n&quot;;   cin &gt;&gt; xcoord;   cout &lt;&lt; &quot;Input y coordinate of the first point&quot; &lt;&lt; &quot;\n&quot;;   cin &gt;&gt; ycoord;   p1 = Point(xcoord, ycoord);   cout &lt;&lt; &quot;Input x coordinate of the second point&quot; &lt;&lt; &quot;\n&quot;;   cin &gt;&gt; xcoord;   cout &lt;&lt; &quot;Input y coordinate of the second point&quot; &lt;&lt; &quot;\n&quot;;   cin &gt;&gt; ycoord;   p2 = Point(xcoord, ycoord);   slope = (p2.get_y() - p1.get_y()) / (p2.get_x() - p1.get_x() );   cout &lt;&lt; &quot;The slope of the line between Points 1 and 2 is &quot; &lt;&lt; slope &lt;&lt; &quot;\n&quot;;   return 0;}</PRE>        <UL>      <LI>Correct and rebuild the program to dissallow a vertical line        (denominator = 0).</LI>    </UL>        <P><TEXTAREA NAME="CCC_CH4_P1b" COLS="80" ROWS="20">/* paste program here */</TEXTAREA></P>    <UL>      <LI>What are the results when point1=(4,2) and point2 = (4,2) ?</LI>    </UL>        <P><TEXTAREA NAME="CCC_CH4_P1c" COLS="80" ROWS="3"></TEXTAREA></P>    <UL>      <LI>What are the results when when point1=(4,2.5) and point2 = (3,1.5) ?</LI>    </UL>        <P><TEXTAREA NAME="CCC_CH4_P1d" COLS="80" ROWS="3"></TEXTAREA></P>    <hr>    <h3>P2. Additional Input Validation Exercise</h3>    <ul>      <li>Build and run the following program.&nbsp; Describe what happens when        the salaries from the first and second years are equal.</li>    </ul>    <p><TEXTAREA NAME="S1" COLS="80" ROWS="3"></TEXTAREA></p>    <p style="line-height: 100%">#include &lt;iostream><br>    using namespace std;<br>    int main()<br>    {&nbsp;<br>   double fyear_sal, syear_sal,tyear_sal;<br>    <br>   cout &lt;&lt; "Input the first year's salary:" &lt;&lt; &quot;\n&quot;;<br>   cin >> fyear_sal;;<br>   cout &lt;&lt;&nbsp; "Input the second year's salary:" &lt;&lt;&nbsp; "\n";<br>   cin >> syear_sal;<br>   cout &lt;&lt; "Input the third year's salary:" &lt;&lt; "\n";<br>   cin &gt;&gt; tyear_sal;<br>   cout &lt;&lt;&nbsp; "The difference between the third and second year salary and second and first is:"<br>    cout &lt;&lt; ((tyear_sal-syear_sal)/(syear_sal-fyear_sal))*100 &lt;&lt; "%";<br>   return 0;<br>    }<br>    </p>        <UL>      <LI>Correct and rebuild the program to not allow for&nbsp; case where both        the first and second year salaries are the same.</LI>    </UL>        <P><TEXTAREA NAME="S2" COLS="80" ROWS="20">/* paste program here */</TEXTAREA></P>    <UL>      <LI>What are the results when fyear_salary = 100000 and syear_salary =        100000?</LI>    </UL>        <P><TEXTAREA NAME="S3" COLS="80" ROWS="3"></TEXTAREA></P>    <p><br>    </p>    <HR>        <H3>P3. The <TT>if/else</TT> statement</H3>        <P>In the previous examples, your program probably responded to user input      by ignoring cases that would result in a divide by zero. Instead, you can      use the <TT>if/else</TT> format to explicitly specify the action to be      taken.</P>    <PRE>if (<i>condition</i>)   /* do something ... */else   /* do something different ... */</PRE>        <P>The electric company gives a discount on electricity based upon    usage.&nbsp; The normal rate is $.60 per Kilowatt Hour (KWH).&nbsp; If the    number of KWH is above 1000, then the rate is $.45 per KWH.&nbsp; Write a    program that prompts the user for the number of Kilowatt Hours used and then    calculates and prints the total electric bill. </P>        <P><TEXTAREA NAME="CCC_CH4_P2a" COLS="80" ROWS="40">/* paste program here */</TEXTAREA></P>        <P>According to your program, how much will it cost for:</P>    <TABLE>      <TR>        <TD>900 KWH?</TD>        <TD><INPUT NAME="CCC_CH4_P2b" WIDTH="200" ALIGN="MIDDLE"></TD>      </TR>      <TR>        <TD>1754 KWH?</TD>        <TD><INPUT NAME="CCC_CH4_P2c" WIDTH="200" ALIGN="MIDDLE"></TD>      </TR>      <TR>        <TD>10000 KWH?</TD>        <TD><INPUT NAME="CCC_CH4_P2d" WIDTH="200" ALIGN="MIDDLE"></TD>      </TR>    </TABLE>    <HR>        <H3>P4. Simple Loops</H3>        <P>Frequently, a decision needs to be made whether or not to do something      again. Here is a program that computes the number of digits needed to      represent a number in base 10, just like the function <TT>digits()</TT>      from the preceding lab. But instead of using recursion, it uses multiple      <TT>if</TT> statements. </P><PRE>/* PURPOSE:  Count number of digits needed to express an integer in base 10             using multiple if statements   REMARKS:  Compare to Ch.5 digits()*/#include &lt;iostream&gt;using namespace std;int main(){  int input;   cout &lt;&lt; &quot;Input an integer between 1 and 9999: &quot;;   cin &gt;&gt; input;   int temp = input;   int d = 1;   assert ( input &gt;= 1 and input &lt;= 9999 );       if (temp &gt; 9)   {  temp = temp / 10;      d++;   }         if (temp &gt; 9)   {  temp = temp / 10;      d++;   }   if (temp &gt; 9)   {  temp = temp / 10;      d++;   }   if (temp &gt; 9)   {  temp = temp / 10;      d++;   }      cout &lt;&lt; input &lt;&lt; &quot; can be expressed in &quot; &lt;&lt; d &lt;&lt; &quot; digits&quot; &lt;&lt; &quot;\n&quot;;      return 0;}</PRE>        <P>But having to write</P><PRE>   if (temp &gt; 9)   {   temp = temp / 10;       d++;   }</PRE>        <P>four times, even using copy/paste, is clearly repetitive! It also only      works for input &lt;= 9999. One would like to have a way of testing that      the input is still greater than 1, and executing the succeeding control      block if it is. Replacing <TT> if </TT> with <TT> while </TT> does it.    </P><PRE>/* PURPOSE:  Count number of digits needed to express an integer in base 10             using while loop*/#include &lt;iostream&gt;using namespace std;int main(){  int input;     cout &lt;&lt; &quot;Input an integer: &quot;;   cin &gt;&gt; input;   int d = 1;   int temp = input;   <I>while (temp &gt; 9)</I>   {  temp = temp / 10;      d++;   }   cout &lt;&lt; input &lt;&lt; &quot; can be expressed in &quot; &lt;&lt; d &lt;&lt; &quot; digits&quot; &lt;&lt; &quot;\n&quot;;   }</PRE>        <P><BR>       </P>        <P>The fractions 1/2, 1/4, 1/8, ... get closer and closer to 0. Change the      previous program to count the number of divisions by two needed to be      within 0.0001 of zero.</P><TEXTAREA NAME="CCC_CH6_P1a" COLS="80" ROWS="20">/* paste program here */</TEXTAREA>        <H3>P5. Loop Termination</H3>        <P>Which values of <TT>nyear</TT> cause the following loops to terminate?</P><PRE>/* PURPOSE: Count number of year between a user-input year and the            year 2000.*/            int main(){  int nyear;   millennium = 2000;      cout &lt;&lt; &quot;Please enter the current year&quot;;   cin &gt;&gt; nyear;      while (nyear != millennium)   {  nyear++;   }      cout &lt;&lt; &quot; Another &quot;&lt;&lt; millenium - nyear &lt;&lt; &quot;years to the millenium.&quot; &lt;&lt; &quot;\n&quot;;   return 0;}   </PRE><TEXTAREA NAME="CCC_CH6_P2a" COLS="80" ROWS="2"></TEXTAREA>        <P>Re-write the preceding program so that the while loop will terminate for      any integer input.</P><TEXTAREA NAME="CCC_CH6_P2b" COLS="80" ROWS="20">/* paste program here */</TEXTAREA>        <H3>&nbsp;</H3>        <H3>P6. Processing a Sequence of Inputs</H3>        <p>Modify the electric rate program to allow the user to enter data for any    number of months.&nbsp; The user should be able to enter a -1 when    finished.&nbsp; The program should then compute the cost using the same    formulas as above.</p>        <p><TEXTAREA NAME="S4" COLS="80" ROWS="40">/* paste program here */</TEXTAREA></p>        <HR>        <H3>R3. Using Boolean variables</H3>        <P>According to the following program, what color is the resulting mixture      under the following inputs? </P>    <TABLE>      <TR>        <TD><TT>Y N Y</TT></TD>        <TD><INPUT NAME="CCC_CH4_R3a" WIDTH="200" ALIGN="MIDDLE"></TD>      </TR>      <TR>        <TD><TT>Y Y N</TT></TD>        <TD><INPUT NAME="CCC_CH4_R3b" WIDTH="200" ALIGN="MIDDLE"></TD>      </TR>      <TR>        <TD><TT>N N N</TT></TD>        <TD><INPUT NAME="CCC_CH4_R3c" WIDTH="200" ALIGN="MIDDLE"></TD>      </TR>    </TABLE><PRE>#include &lt;iostream&gt;#include &lt;string&gt;using namespace std;int main(){  string mixture;         bool red, green, blue;   string string_bool;   cout &lt;&lt; &quot;Include red in mixture? (y/n) &quot; &lt;&lt; &quot;\n&quot;;   cin &gt;&gt; string_bool;   if (string_bool == &quot;y&quot;)      red = true;   cout &lt;&lt; &quot;Include green in mixture? (y/n) &quot; &lt;&lt; &quot;\n&quot;;   cin &gt;&gt; string_bool;   if (string_bool == &quot;y&quot;)      green = true;   cout &lt;&lt; &quot;Include blue in mixture? (y/n) &quot; &lt;&lt; &quot;\n&quot;;   cin &gt;&gt; string_bool;   if (string_bool == &quot;y&quot;)      blue = true;   if (not blue and not green)           mixture = &quot;RED&quot;;   else if (not red and not blue)           mixture = &quot;GREEN&quot;;   else if (not red and not green)           mixture = &quot;BLUE&quot;;   else if (red)   {  if (green or blue)      {  if (green and blue)            mixture = &quot;BLACK&quot;;         else if (green)             mixture = &quot;YELLOW&quot;;         else            mixture = &quot;PURPLE&quot;;      }   }   else   {  if (blue and green)         mixture = &quot;CYAN&quot;;      else         mixture = &quot;WHITE&quot;;   }   cout &lt;&lt; &quot;Your mixture is &quot; &lt;&lt; mixture &lt;&lt; &quot;\n&quot;;   return 0;}</PRE>        <HR>        <P>Don't forget to <A HREF="#submit">send your answers</A> when you're      finished.</P></FORM>  </BODY></HTML>