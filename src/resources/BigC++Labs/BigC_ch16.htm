<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><HEAD>	<META HTTP-EQUIV="Content-Type" CONTENT="text/html;CHARSET=iso-8859-1">	<META NAME="GENERATOR" Content="Visual Page 2.0 for Windows">	<TITLE>Big C++ Lab - Chapter 16 Intro to Data Structures</TITLE></HEAD><BODY><FORM ACTION="CCC_CH16_LAB.HTML" METHOD="POST" ENCTYPE="application/x-www-form-urlencoded"><p align="center"><font size="6">BIG C++<br>  </font><font size="4">Cay Horstmann     &amp; Timothy Budd</font> </p>  <p align="center"><font size="4"><strong>Laboratory Notebook<br>    Chapter 16 - Introduction to Data Structures</strong></font> </p><P><HR ALIGN="CENTER"><TABLE BORDER="0">	<TR>		<TD>Your name:</TD>		<TD><INPUT TYPE="TEXT" NAME="username" SIZE="20"></TD>	</TR>	<TR>		<TD>Your email address:</TD>		<TD><INPUT TYPE="TEXT" NAME="recipientaddr" SIZE="20"></TD>	</TR>	<TR>		<TD>Your student ID number:</TD>		<TD><INPUT TYPE="TEXT" NAME="ID" SIZE="20"></TD>	</TR></TABLE><INPUT TYPE="HIDDEN" NAME="useraddr" SIZE="-1" VALUE="instructor@institution.edu"><INPUT TYPE="HIDDEN" NAME="recipientname"SIZE="-1" VALUE="yourself since this form has not been customized for your institution"> <INPUT TYPE="HIDDEN" NAME="subject"SIZE="-1" VALUE="CCC Lab16"></P><P><A NAME="#submit"></A>Once this form has been customized for your institution, you can use this button <INPUTTYPE="SUBMIT" VALUE="Send lab"> to send your lab work. Be sure to read the <A HREF="instructions.html">instructions</A>before starting your work.</P><P><HR ALIGN="CENTER"><H4>Lab Objectives</H4><P>To gain experience with<UL>	<LI>programming using linked lists	<LI>insertion and removal of list elements	<LI>programming stacks and queues	<LI>the standard template library</UL><P><HR ALIGN="CENTER"><H3>P1. Using Linked Lists</H3><P>In this exercise, you should use the standard <TT>list</TT> template. Write a program that reads in a sequenceof numbers and adds each input to the <I>front</I> of a <TT>list&lt;int&gt;</TT> object. (To add to the front,use the <TT>insert</TT> function with the <TT>begin</TT> iterator position.)</P><P>Then iterate through the list and print each element.</P><P>. <TEXTAREA NAME="CCC_CH13_P2a" ROWS="20" COLS="80">/* paste program here */</TEXTAREA></P><P>Run your program and describe its behavior.</P><P>. <TEXTAREA NAME="CCC_CH13_P2b" ROWS="3" COLS="80"></TEXTAREA></P><H3>P2. Implementing linked list operations</H3><P>One very natural operation that is not already a feature of the <TT>List</TT> class in the textbook is appendingan element to the head of a list.</P><P>Provide a new member function <TT>push_front(string e)</TT> class which will add the string <TT>e</TT> to thestart of the original list.</P><P>For example, if the list <TT>a</TT> contains Harriet, Jim and Carolyn, and <TT>e</TT> is Harry, then the command<TT>a.push_front(e)</TT> changes <TT>a</TT> to contain Harry, Harriet, Jim, and Carolyn.</P><P>In this exercise, you must modify the <I>pointers</I> of the list. You may not use list iterators.</P><P>. <TEXTAREA NAME="CCC_CH13_P3a" ROWS="20" COLS="80">/* paste program here */</TEXTAREA></P><P>Test the <TT>append</TT> function by writing a <TT>main</TT> function that prints a list and then appends <TT>Employee</TT>objects to a list. Then print out the combined list.</P><H3><TEXTAREA NAME="CCC_CH13_P2b" ROWS="10" COLS="80">/* paste output here */</TEXTAREA> <HR ALIGN="CENTER">P3. Implementing a Stack</H3><P>Using the Student class from Lab Notebook chapter 10, implement a stack to store students who have registeredfor a course. Your program should prompt the user for students and majors, store these to a stack and then popthe entire stack when the user requests this,</P><P><TEXTAREA NAME="CCC_CH13_P3a" ROWS="20" COLS="80">/* paste program here */</TEXTAREA></P><P>Since this might not be quite correct for registration, implement the same program as above, except with a queue.</P><H3><HR ALIGN="CENTER">P4. Other Standard Containers</H3><P>Using the Student class, implement a map container and use the social security number as the index. Your programshould ask the user for a list of students and social security numbers. It should then allow the user to searchthrough the list of students using a social security number.</P><P><TEXTAREA NAME="CCC_CH13_P3a" ROWS="20" COLS="80">/* paste program here */</TEXTAREA></P><P>Don't forget to <A HREF="#submit">send your answers</A> when you're finished.</FORM></BODY></HTML>