<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"><HTML><HEAD>	<META HTTP-EQUIV="Content-Type" CONTENT="text/html;CHARSET=iso-8859-1">	<META NAME="GENERATOR" Content="Microsoft FrontPage 4.0">	<TITLE>Big C++ Lab - Chapter 7 Advanced Flow Control</TITLE></HEAD><BODY><FORM ACTION="CCC_CH4_LAB.HTML" METHOD="POST" ENCTYPE="application/x-www-form-urlencoded"><p align="center"><font size="6">BIG C++<br>  </font><font size="4">Cay Horstmann     &amp; Timothy Budd</font> </p>  <p align="center"><font size="4"><strong>Laboratory Notebook<br>    Chapter 7 - Advanced Flow Control</strong></font> </p><hr align="center"><TABLE BORDER="0">	<TR>		<TD>Your name:</TD>		<TD><INPUT TYPE="TEXT" NAME="username" SIZE="20"></TD>	</TR>	<TR>		<TD>Your email address:</TD>		<TD><INPUT TYPE="TEXT" NAME="recipientaddr" SIZE="20"></TD>	</TR>	<TR>		<TD>Your student ID number:</TD>		<TD><INPUT TYPE="TEXT" NAME="ID" SIZE="20"></TD>	</TR></TABLE><INPUT TYPE="HIDDEN" NAME="useraddr" SIZE="-1" VALUE="instructor@institution.edu"><INPUT TYPE="HIDDEN" NAME="recipientname"SIZE="-1" VALUE="yourself since this form has not been customized for your institution"> <INPUT TYPE="HIDDEN" NAME="subject"SIZE="-1" VALUE="CCC Lab4"><P><A NAME="#submit"></A>Once this form has been customized for your institution, you can use this button <INPUTTYPE="SUBMIT" VALUE="Send lab"> to send your lab work. Be sure to read the <A HREF="instructions.html">instructions</A>before starting your work.</P><P><HR ALIGN="CENTER"><H3>Lab Objectives</H3><P>To gain experience in</P><UL>	<LI>implement multiple branching	<LI>understand nested branches and loops	<LI>programming loops with the for and do/while statements</UL><H3>P1. Multiple alternatives</H3><P>The <TT>if/else</TT> decision for electric rates that was implemented in the Chapter 4 lab can be extended toselect from more than two possible outcomes. The <TT>if ... else if . . else </TT>syntax is used to select exactlyone of several possible actions.</P><PRE>if (<I>condition1</I>)   /* do something ... */else if (<I>condition2</I>)   /* do something different ... */else   /* do something generic ...   */</PRE><P STYLE="line-height : 100%">Write a program to compute the electric bill as you did above.&nbsp; Instead of tworates, write the program so that there are 4 different rates as follows:</P><P><TABLE BORDER="1" WIDTH="40%">	<TR>		<TD WIDTH="50%">0-999 KWH</TD>		<TD WIDTH="50%">$0.60</TD>	</TR>	<TR>		<TD WIDTH="50%">1000-1499 KWH</TD>		<TD WIDTH="50%">$0.45</TD>	</TR>	<TR>		<TD WIDTH="50%">1500-1999 KWH</TD>		<TD WIDTH="50%">$0.40</TD>	</TR>	<TR>		<TD WIDTH="50%">2000 or more KWH</TD>		<TD WIDTH="50%">$0.35</TD>	</TR></TABLE><P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</P><P><TEXTAREA NAME="CCC_CH4_P3a" ROWS="40" COLS="80">/* paste program here */</TEXTAREA></P><P><HR ALIGN="CENTER"><H3>P2. Nested Branches</H3><P>If there are multiple conditions, it can happen that a conditionally executed block contains further decisions.&nbsp;For example, let's suppose that our electric rates were based upon certain rate classes within each grouping:</P><P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 - 999 KWH&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; commercial rate class&nbsp;$0.49<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r1 rate class&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$0.57<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r2 rate class&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$0.60</P><P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1000-1499 KWH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; commercial rate class&nbsp;$0.38<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r1 rate class&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$0.43<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r2 rate class&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$0.44<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r3 rate class&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$0.45</P><P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1500 - 1999 KWH <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; commercial rate class&nbsp;$0.31<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r1 rate class&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$0.40<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2000 or more KWH&nbsp;&nbsp;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; commercial rateclass&nbsp; $0.29<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; r1 rate class&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$0.31<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r2 rate class&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$0.35</P><P>Modify the program that you wrote for P4 to perform the computations based upon the rate classes.</P><P><TEXTAREA NAME="CCC_CH4_P4a" ROWS="40" COLS="80">/* paste program here */</TEXTAREA></P><P><HR ALIGN="CENTER"><H3>P3. Logical Operations</H3><P>C++ has three logical operations, <TT>and</TT>, <TT>or</TT> and <TT>not</TT>. These are traditionally writtenas <TT>&amp;&amp;</TT>, <TT>||</TT> and <TT>!</TT>. Both variants are legal under ANSI C++. We find the formereasier to read, but many C++ programmer use the latter out of habit. Feel free to use either form in your answers.</P><P>Using these operations, express the following:</P><P>x and y are both positive or neither of them is positive.</P><P><TEXTAREA NAME="CCC_CH4_P5a" ROWS="5" COLS="80"></TEXTAREA></P><P>The following program calculates the discount rate for fuel oil.&nbsp;&nbsp; Simplify the nested branches byusing Logical Operations <TT>and, or, not </TT>wherever possible.</P><PRE>#include &lt;iostream&gt;#include &lt;string&gt;using namespace std;int main(){  	string  customer_city;	double	gal_last;	double discount_rate  =  1;	cout &lt;&lt;&quot;Customer City:&quot;;	getline(cin,customer_city);	cout &lt;&lt;&quot;Number of gallons of oil used last year: &quot;;	cin &gt;&gt;gal_last;	if (customer_city == &quot;Boston&quot;)		if (gal_last &gt;= 1000)				discount_rate = .9;		else				discount_rate = 1;	else if (customer_city == &quot;Worcester&quot;)		if (gal_last &gt;= 1200)				discount_rate = .91;		else				discount_rate = 1;	else		if (gal_last &gt;= 1500)			discount_rate = .9;		else			discount_rate = 1;	cout &lt;&lt; &quot;Discount rate is:   &quot;&lt;&lt;discount_rate;	return 0;}</PRE><P><TEXTAREA NAME="CCC_CH4_P5b" ROWS="20" COLS="80">/* paste program here */</TEXTAREA></P><P><HR ALIGN="CENTER"><H3>P4. <TT>for</TT> Loops</H3><P>A variable that counts the iterations of a loop is called a <I>loopindex.&nbsp; </I>Looping can be accomplished with a loop index and a while loopor we can use the a <i>for loop</i>, with the following syntax:</P><PRE>for ( <I>loop_index = start_value</I> ; <I>condition</I> ; <I>index_increment</I> )</PRE><P>Write a program controlled by two <TT>for </TT>loops which produces the following listing of inclusive dates,from the 5th Century B.C. through the 5th Century A.D.</P><PRE>Century 5 BC  400-499Century 4 BC  300-399Century 3 BC  200-299Century 2 BC  100-199Century 1 BC  1-99Century 1 AD  1-99Century 2 AD  100-199Century 3 AD  200-299Century 4 AD  300-399Century 5 AD  400-499</PRE><P><TEXTAREA NAME="CCC_CH6_P3a" ROWS="20" COLS="80">/* paste program here */</TEXTAREA></P><P>Write the same program with a single loop <TT>for( i = -5 ; i &lt;= 5 ; i++ )</TT> and an <TT>if</TT> in thebody of the loop. <TEXTAREA NAME="CCC_CH6_P3b" ROWS="20" COLS="80">/* paste program here */</TEXTAREA></P><P><HR ALIGN="CENTER"><H3>R1. Other Loops</H3><P>One loop type might be better suited to a purpose than another. The following usages are idiomatic.</P><P><TABLE BORDER="1">	<TR>		<TD><TT>for</TT></TD>		<TD>Known number of iterations</TD>	</TR>	<TR>		<TD><TT>while</TT></TD>		<TD>Unknown number of iterations</TD>	</TR>	<TR>		<TD><TT>do while</TT></TD>		<TD>At least one iteration</TD>	</TR></TABLE><P><P>Convert to a <TT>do while</TT> loop</P><PRE>/* PURPOSE: Program to compute a running sum of user-input integers*/#include &lt;iostream&gt;using namespace std;int main(){  int sum = 0;   int n = 1;      while( n != 0 )   {  cout &lt;&lt; &quot;Sum =  &quot; &lt;&lt; sum  &lt;&lt; &quot;\n&quot;;      cout &lt;&lt; &quot;Please enter a number, 0 to quit &quot;;      cin &gt;&gt; n;      sum += n;      cout &lt;&lt; &quot;Sum =  &quot; &lt;&lt; sum  &lt;&lt; &quot;\n&quot;;   }   return 0;}</PRE><P><TEXTAREA NAME="CCC_CH6_R1a" ROWS="10" COLS="80"></TEXTAREA></P><P>Is this an improvement? Why?</P><P><TEXTAREA NAME="CCC_CH6_R1b" ROWS="2" COLS="80"></TEXTAREA></P><P>Convert the inner <TT>while</TT> loop to a <TT>for</TT> loop</P><PRE>/* PURPOSE: Program to compute the first integral power to which 2 can be             raised that is greater than that multiple of a user-input integer. */#include &lt;iostream&gt;using namespace std;int main(){  int i = 1;   int n = 1;   while(true)   {  cout &lt;&lt; &quot;Please enter a number, 0 to quit &quot;;      cin &gt;&gt; n;      if (n == 0) return 0;      i = 1;      while ( n * n &gt; pow(2,i))      {   i++;      }      cout &lt;&lt; &quot;2 raised to &quot; &lt;&lt; i          &lt;&lt; &quot; is the first power of two greater than &quot; &lt;&lt; n &lt;&lt; &quot; squared\n&quot;;   }      }</PRE><P><TEXTAREA NAME="CCC_CH6_R1c" ROWS="10" COLS="80"></TEXTAREA></P><P>Is this an improvement? Why?</P><P><TEXTAREA NAME="CCC_CH6_R1d" ROWS="2" COLS="80"></TEXTAREA></P><P>Convert to a while loop:</P><PRE>#include &lt;iostream&gt;using namespace std;int main(){  int i;   for(i = 1; i &lt;= 10; i++)   {  cout &lt;&lt; i &lt;&lt; &quot; squared equals &quot; &lt;&lt; i * i &lt;&lt; &quot;\n&quot;;   }   return 0;}</PRE><P><TEXTAREA NAME="CCC_CH6_R1e" ROWS="10" COLS="80"></TEXTAREA></P><P>Is this an improvement? Why?</P><P><TEXTAREA NAME="CCC_CH6_R1f" ROWS="2" COLS="80"></TEXTAREA></P><P><HR ALIGN="CENTER"><H3>P5. Iterating through a string</H3><P>Many word-processors can check spelling. One of the corrections applied is to swap 'e' for 'i' if 'i' occursimmediately before 'e' and immediately after 'c'. For example, <I>concieve</I> is corrected to <I>conceive</I>.Complete a function <TT>string i_before_e(string word) </TT>that carries out this correction. That is, your functionshould return the corrected string (or the original string if no correction needed to be applied.)</P><PRE>string i_before_e(string word){  string r = &quot;&quot;;   for (i = 0 ; i &lt; word.length() ; i++ )   { /*        Your work goes here     */   }   return r;}</PRE><P>Write a test harness to test the preceding function by feeding it many inputs.</P><PRE>#include &lt;iostream&gt;#include &lt;string&gt;using namespace std;int main(){  bool done = false;        while (not done)   {  /*         Your work goes here      */   }   return 0;}</PRE><P><TEXTAREA NAME="CCC_CH6_P4a" ROWS="30" COLS="80">/* paste program here */</TEXTAREA> <HR ALIGN="CENTER"><H3>R2. Tracing Loops</H3><P>1) What is the output of each of the following loops?</P><P>2) In each example, leave the loop as it is and change the expression following <TT>cout &lt;&lt; </TT>so thatthe program will display &quot;1 2 3 4 5 &quot;.</P><PRE>#include &lt;iostream&gt;using namespace std;int main(){  for ( i = 0 ; i &lt; 5 ; i++ )   {   cout &lt;&lt; i &lt;&lt; &quot; &quot;;   }   cout &lt;&lt; &quot;\n&quot;;   return 0;}</PRE><P><TEXTAREA NAME="CCC_CH6_R2a" ROWS="2" COLS="80"></TEXTAREA> <TEXTAREA NAME="CCC_CH6_R2b" ROWS="5" COLS="80"></TEXTAREA></P><PRE>#include &lt;iostream&gt;using namespace std;int main(){  int decimals = 1;   while (decimals &lt; 100000)   {  cout &lt;&lt; decimals &lt;&lt; &quot;\n&quot;;      decimals *= 10;   }   return 0;   }</PRE><P><TEXTAREA NAME="CCC_CH6_R2c" ROWS="2" COLS="80"></TEXTAREA> <TEXTAREA NAME="CCC_CH6_R2d" ROWS="5" COLS="80"></TEXTAREA></P><PRE>#include &lt;iostream&gt;using namespace std;int main(){  int i = 5;   do   {  cout &lt;&lt; i &lt;&lt; &quot;\n&quot;      i--;   }  while( i &gt; 0 )   return 0;   }</PRE><P><TEXTAREA NAME="CCC_CH6_3h" ROWS="2" COLS="80"></TEXTAREA> <TEXTAREA NAME="CCC_CH6_3i" ROWS="5" COLS="80"></TEXTAREA><HR ALIGN="CENTER"><H3>P6. Nested Loops</H3><P>Write a program to draw a top view of 24 soda cans, that is 24 circles, arranged in a 4 x 6 grid like this:</P><P><IMG SRC="ch7-sodacans.jpg" WIDTH="294" HEIGHT="224" ALIGN="BOTTOM" ALT="4 by 6 Beercans" BORDER="0" HSPACE="20"VSPACE="20" ALIGN="ABSMIDDLE"> <TEXTAREA NAME="CCC_CH6_P5a" ROWS="30" COLS="80">/* paste program here */</TEXTAREA></P><H3>&nbsp;</h3><HR ALIGN="CENTER"><h3>P7. Processing Text Input</h3><P>Write a program to read sentences entered by the user.  The user should terminate the sentence by entering a/n.  Your program should count the number of words in the sentence and ask the user if they would like to enteranother sentence.  It should keep track of the number of words in the sentence and compare the number of wordsto the greatest number of words counted in one sentence up to that point.  If the number of words exceeds the greatest,the number of words for the new sentence becomes the greatest.</P><P><TEXTAREA NAME="CCC_CH6_P5a" ROWS="30" COLS="80">/* paste program here */</TEXTAREA></P><P><BR><BR>Don't forget to <A HREF="#submit">send your answers</A> when you're finished.</FORM></BODY></HTML>